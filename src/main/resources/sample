1.1 根对象访问
$ - 表示 JSON 文档的根元素

示例：对于 {"a": 1}，$ 返回整个对象


$.books[?(@.price < 10)]
对于{
    "books": [
      {"title": "Book1", "price": 8.95},
      {"title": "Book2", "price": 12.99}
    ]
  }
输出

1.2 点表示法
$.property - 访问对象的属性

示例：对于 {"a": {"b": 2}}，$.a.b 返回 2

1.3 括号表示法
$['property'] - 访问对象属性（支持特殊字符）

示例：对于 {"my-property": 3}，$['my-property'] 返回 3

2. 数组访问功能
2.1 索引访问
$[1] - 访问数组的第一个元素

示例：对于 ["a", "b", "c"]，$[1] 返回 "b"

2.2 负索引
$[-1] - 访问数组的最后一个元素

示例：对于 ["a", "b", "c"]，$[-2] 返回 "b"

3. 通配符功能
3.1 属性通配符
$.* - 获取对象的所有属性值

示例：对于 {"a": 1, "b": 2}，$.* 返回 [1, 2]

3.2 数组通配符
$[*] - 获取数组的所有元素

示例：对于 ["a", "b", "c"]，$[*] 返回 ["a", "b", "c"]

4. 切片功能
4.1 基本切片
$[1:3] - 获取索引 1 到 3（不包括 3）的元素

示例：对于 ["a", "b", "c", "d"]，$[1:3] 返回 ["b", "c"]

4.2 省略开始/结束
$[:2] - 从开始到索引

$[1:] - 从索引 1 到最后

示例：对于 ["a", "b", "c", "d"]，$[1:] 返回 ["b", "c", "d"]

4.3 步长切片
$[::2] - 每隔一个元素取一个

示例：对于 ["a", "b", "c", "d"]，$[::2] 返回 ["a", "c"]

5. 递归下降功能
5.1 递归搜索
$..property - 递归查找所有名为 "property" 的属性

示例：对于 {"a": {"b": 2}, "b": 3}，$..b 返回 [2, 3]

5.2 递归数组
$..[0] - 递归查找所有数组的第一个元素

示例：对于 {"a": [{"b": 1}, {"b": 2}], "c": [{"d": 3}]}，$..[0] 返回 [{"b": 1}, {"d": 3}]

6. 过滤表达式功能
6.1 简单比较
$[?(@.price < 10)] - 筛选 price 小于 10 的元素

示例：对于 [{"price": 5}, {"price": 15}]，返回 [{"price": 5}]

6.2 逻辑运算you went
$[?(@.price < 10 && @.inStock)] - 组合条件-->

示例：对于 [{"price": 5, "inStock": true}, {"price": 8, "inStock": false}]，返回 [{"price": 5, "inStock": true}]

6.3 正则匹配
$[?(@.name =~ /^B.*/)] - 正则表达式匹配-->

示例：对于 [{"name": "Apple"}, {"name": "Banana"}]，返回 [{"name": "Banana"}]

6.4 存在性检查
$[?(@.isbn)] - 检查属性是否存在

示例：对于 [{"title": "A"}, {"title": "B", "isbn": "123"}]，返回 [{"title": "B", "isbn": "123"}]

7. 脚本表达式功能
7.1 复杂表达式
$[?(@.price > 5 && (@.category == 'fiction' || @.category == 'fantasy'))]

示例：筛选价格大于5且类别为小说或奇幻的项

7.2 函数支持
$[?(@.length() > 3)] - 假设支持 length() 函数

示例：对于 ["a", "bb", "ccc", "dddd"]，返回 ["dddd"]

8. 多路径选择功能
8.1 多路径组合
$['a', 'b'] - 同时选择多个属性

示例：对于 {"a": 1, "b": 2, "c": 3}，返回 [1, 2]

8.2 混合路径
$..['name', 'price'] - 递归查找多个属性-->

示例：在嵌套结构中查找所有 name 和 price 属性

9. 特殊功能
9.1 当前节点引用
@ - 在过滤表达式中引用当前节点

示例：$[?(@.length > 5)] 中的 @ 指代当前数组元素-->

9.2 动态属性名
$[(@.propertyName)] - 使用属性值作为属性名

示例：对于 {"key": "name", "name": "value"}，$[(@.key)] 返回 "value"

10. 结果集操作
10.1 结果合并
$..book[0,1] - 获取多个不连续的结果

示例：获取前两本书

10.2 结果切片
$..book[:2] - 对结果集进行切片操作

示例：获取前两本书

$[?(@.price < 10)] - 价格小于10的所有项

$[?(@.name =~ /^A.*/)] - 名称以A开头的所有项--

$[?(@.age >= 18 && @.age <= 65)] - 年龄在18到65之间的所有项

$[?(!@.isActive)] - 不活跃的所有项

$[?(@.tags contains 'sale')] - 包含'sale'标签的所有项